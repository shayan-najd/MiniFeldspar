./clean
rm IPMini
{ time ghc -o IPMini Examples/Feldspar/IP/MiniWellScoped.hs  -XRankNTypes -XPolyKinds -XGADTs -XStandaloneDeriving -XDeriveTraversable -XDeriveFoldable -XDeriveFunctor -XTemplateHaskell -XImplicitParams -XMultiParamTypeClasses -XTypeOperators -XDataKinds -XFlexibleInstances -XPatternSynonyms -XTypeFamilies -XScopedTypeVariables 2> sleepStdErr.txt ; } 2>> timeIPMiniCompile
./clean
rm IPMini
{ time ghc -o IPMini Examples/Feldspar/IP/MiniWellScoped.hs  -XRankNTypes -XPolyKinds -XGADTs -XStandaloneDeriving -XDeriveTraversable -XDeriveFoldable -XDeriveFunctor -XTemplateHaskell -XImplicitParams -XMultiParamTypeClasses -XTypeOperators -XDataKinds -XFlexibleInstances -XPatternSynonyms -XTypeFamilies -XScopedTypeVariables 2> sleepStdErr.txt ; } 2>> timeIPMiniCompile
./clean
rm IPMini
{ time ghc -o IPMini Examples/Feldspar/IP/MiniWellScoped.hs  -XRankNTypes -XPolyKinds -XGADTs -XStandaloneDeriving -XDeriveTraversable -XDeriveFoldable -XDeriveFunctor -XTemplateHaskell -XImplicitParams -XMultiParamTypeClasses -XTypeOperators -XDataKinds -XFlexibleInstances -XPatternSynonyms -XTypeFamilies -XScopedTypeVariables 2> sleepStdErr.txt ; } 2>> timeIPMiniCompile
./clean
rm IPMini
{ time ghc -o IPMini Examples/Feldspar/IP/MiniWellScoped.hs  -XRankNTypes -XPolyKinds -XGADTs -XStandaloneDeriving -XDeriveTraversable -XDeriveFoldable -XDeriveFunctor -XTemplateHaskell -XImplicitParams -XMultiParamTypeClasses -XTypeOperators -XDataKinds -XFlexibleInstances -XPatternSynonyms -XTypeFamilies -XScopedTypeVariables 2> sleepStdErr.txt ; } 2>> timeIPMiniCompile
./clean
rm IPMini
{ time ghc -o IPMini Examples/Feldspar/IP/MiniWellScoped.hs  -XRankNTypes -XPolyKinds -XGADTs -XStandaloneDeriving -XDeriveTraversable -XDeriveFoldable -XDeriveFunctor -XTemplateHaskell -XImplicitParams -XMultiParamTypeClasses -XTypeOperators -XDataKinds -XFlexibleInstances -XPatternSynonyms -XTypeFamilies -XScopedTypeVariables 2> sleepStdErr.txt ; } 2>> timeIPMiniCompile
./clean
rm IPMini
{ time ghc -o IPMini Examples/Feldspar/IP/MiniWellScoped.hs  -XRankNTypes -XPolyKinds -XGADTs -XStandaloneDeriving -XDeriveTraversable -XDeriveFoldable -XDeriveFunctor -XTemplateHaskell -XImplicitParams -XMultiParamTypeClasses -XTypeOperators -XDataKinds -XFlexibleInstances -XPatternSynonyms -XTypeFamilies -XScopedTypeVariables 2> sleepStdErr.txt ; } 2>> timeIPMiniCompile
./clean
rm IPMini
{ time ghc -o IPMini Examples/Feldspar/IP/MiniWellScoped.hs  -XRankNTypes -XPolyKinds -XGADTs -XStandaloneDeriving -XDeriveTraversable -XDeriveFoldable -XDeriveFunctor -XTemplateHaskell -XImplicitParams -XMultiParamTypeClasses -XTypeOperators -XDataKinds -XFlexibleInstances -XPatternSynonyms -XTypeFamilies -XScopedTypeVariables 2> sleepStdErr.txt ; } 2>> timeIPMiniCompile
./clean
rm IPMini
{ time ghc -o IPMini Examples/Feldspar/IP/MiniWellScoped.hs  -XRankNTypes -XPolyKinds -XGADTs -XStandaloneDeriving -XDeriveTraversable -XDeriveFoldable -XDeriveFunctor -XTemplateHaskell -XImplicitParams -XMultiParamTypeClasses -XTypeOperators -XDataKinds -XFlexibleInstances -XPatternSynonyms -XTypeFamilies -XScopedTypeVariables 2> sleepStdErr.txt ; } 2>> timeIPMiniCompile
./clean
rm IPMini
{ time ghc -o IPMini Examples/Feldspar/IP/MiniWellScoped.hs  -XRankNTypes -XPolyKinds -XGADTs -XStandaloneDeriving -XDeriveTraversable -XDeriveFoldable -XDeriveFunctor -XTemplateHaskell -XImplicitParams -XMultiParamTypeClasses -XTypeOperators -XDataKinds -XFlexibleInstances -XPatternSynonyms -XTypeFamilies -XScopedTypeVariables 2> sleepStdErr.txt ; } 2>> timeIPMiniCompile
./clean
rm IPMini
{ time ghc -o IPMini Examples/Feldspar/IP/MiniWellScoped.hs  -XRankNTypes -XPolyKinds -XGADTs -XStandaloneDeriving -XDeriveTraversable -XDeriveFoldable -XDeriveFunctor -XTemplateHaskell -XImplicitParams -XMultiParamTypeClasses -XTypeOperators -XDataKinds -XFlexibleInstances -XPatternSynonyms -XTypeFamilies -XScopedTypeVariables 2> sleepStdErr.txt ; } 2>> timeIPMiniCompile
./clean